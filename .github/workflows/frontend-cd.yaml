name: Frontend CD
'on':
  workflow_dispatch: null
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 0 5 * * 1-5
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run linting
        working-directory: starter/frontend
        run: yarn run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run linting
        working-directory: starter/frontend
        run: yarn run lint
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: >-
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
            }}.amazonaws.com
          region: '${{ secrets.AWS_REGION }}'
      - name: Build Docker image
        run: >-
          docker build --build-arg REACT_APP_MOVIE_API_URL=${{
          secrets.REACT_APP_MOVIE_API_URL }} -t ${{ secrets.AWS_ACCOUNT_ID
          }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mp-frontend:latest
          .
      - name: Push Docker image to ECR
        run: >-
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: latest
      - name: Update kubeconfig
        run: >-
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
          --region ${{ secrets.AWS_REGION }}
      - name: Set image in kustomize
        run: >
          cd starter/frontend/k8s

          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID
          }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mp-frontend:latest
      - name: Deploy to EKS
        run: |
          cd starter/frontend/k8s
          kustomize build | kubectl apply -f -
