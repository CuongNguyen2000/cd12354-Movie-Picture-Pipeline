name: Backend CI
'on':
  pull_request: null
  workflow_dispatch: null
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run linting
        working-directory: starter/backend
        run: pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run tests
        working-directory: starter/backend
        run: pipenv run test
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: >-
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
            }}.amazonaws.com
          region: '${{ secrets.AWS_REGION }}'
      - name: Build Docker image
        run: >-
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-backend:latest .
      - name: Push Docker image to ECR
        run: >-
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-backend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: latest
      - name: Update kubeconfig
        run: >-
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
          --region ${{ secrets.AWS_REGION }}
      - name: Deploy to EKS
        run: >
          kubectl set image deployment/backend backend=${{
          secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
          }}.amazonaws.com/mp-backend:latest

          kubectl rollout status deployment/backend
