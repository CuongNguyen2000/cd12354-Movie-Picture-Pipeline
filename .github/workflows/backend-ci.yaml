name: Backend Continuous Integration
'on':
  pull_request: null
  workflow_dispatch: null
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run linting
        working-directory: starter/backend
        run: pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run tests
        working-directory: starter/backend
        run: pipenv run test
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_REGION }}'
      - name: Create ECR repository if not exists
        id: create_ecr_repo
        run: |
          if ! aws ecr describe-repositories --repository-names mp-backend; then
            aws ecr create-repository --repository-name mp-backend
          fi
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker image
        working-directory: starter/backend
        run: 'docker build --tag mp-backend:latest .'
      - name: List Docker images
        run: docker images
      - name: Tag Docker image for ECR
        run: >-
          docker tag mp-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-backend:${GITHUB_SHA::7}
      - name: Push Docker image to ECR
        run: >-
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-backend:${GITHUB_SHA::7}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_REGION }}'
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: latest
      - name: Update kubeconfig
        run: >-
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
          --region ${{ secrets.AWS_REGION }}
      - name: Deploy to EKS
        run: >
          kubectl set image deployment/backend backend=${{
          secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
          }}.amazonaws.com/mp-backend:${GITHUB_SHA::7}

          kubectl rollout status deployment/backend
