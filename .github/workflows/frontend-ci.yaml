name: Frontend CI
"on":
  workflow_dispatch: null
  pull_request: null
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run linting
        working-directory: starter/frontend
        run: yarn run lint
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: "${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run linting
        working-directory: starter/frontend
        run: yarn run lint
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Build application using Docker
        run: >
          docker build --build-arg REACT_APP_MOVIE_API_URL=http://localhost:3000
          --tag=mp-frontend:latest .
