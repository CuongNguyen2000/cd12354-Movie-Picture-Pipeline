name: Frontend CI
'on':
  workflow_dispatch: null
  pull_request: null
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: '${{ runner.os }}-modules-${{ hashFiles(''**/yarn.lock'') }}'
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run linting
        working-directory: starter/frontend
        run: yarn run lint
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: '${{ runner.os }}-modules-${{ hashFiles(''**/yarn.lock'') }}'
      - name: Install dependencies
        working-directory: starter/frontend
        run: yarn install
      - name: Run tests
        working-directory: starter/frontend
        run: yarn test
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_REGION }}'
      - name: Log in to Amazon ECR
        id: ecr-login
        run: >
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker
          login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID
          }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      - name: Build Docker image
        working-directory: starter/frontend
        run: >-
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000
          --tag=mp-frontend:latest .
      - name: List Docker images
        run: docker images
      - name: Tag Docker image for ECR
        run: >-
          docker tag mp-frontend:latest ${{ secrets.AWS_ACCOUNT_ID
          }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/mp-frontend:latest
      - name: Push Docker image to ECR
        run: >-
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{
          secrets.AWS_REGION }}.amazonaws.com/mp-frontend:latest
